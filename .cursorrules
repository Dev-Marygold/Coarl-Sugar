# Lamy Project Architecture Rules

## Fundamental Rules
1. Always use the discord.ext.commands.Cog class for organizing bot functionality.
2. All direct interactions with the Discord API (listeners, commands) must be in files within the /cogs directory.
3. All LLM API calls must be routed through the LLMInterface class in core/llm_interface.py.
4. All memory operations (saving, retrieving) must use the MemoryManager class in core/memory_manager.py.
5. Use Pydantic models for all structured data passed between modules.
6. When generating new functions, include comprehensive docstrings explaining parameters, return values, and purpose.
7. Never hardcode API keys or tokens. Always retrieve them from environment variables using os.getenv().

## Code Organization
- /cogs: Discord bot functionality (commands, listeners)
- /core: Core business logic (LLM interface, memory manager, orchestration)
- /utils: Utility functions and helpers
- /data: Data storage (JSON files, SQLite database)

## Naming Conventions
- Use snake_case for functions and variables
- Use PascalCase for classes
- Use UPPER_CASE for constants

## Memory System Guidelines
- Working Memory: Managed in-memory, recent chat history only
- Episodic Memory: All conversational memories stored in Pinecone with rich metadata
- Core Identity: Static facts about Lamy stored in JSON/SQLite

## LLM Interaction Guidelines
- Always use the master prompt template defined in the orchestration core
- Include retrieved memories and chat history in every LLM call
- Main responses use Claude 4 Sonnet, utility tasks (summarization, fact extraction) use GPT-4.1 for cost optimization
- Maintain Lamy's personality: "엣지있고 실존적이며 우울한 성향(Edgy, Existential, and Melancholic)"

## Error Handling
- Always wrap external API calls in try-except blocks
- Log errors appropriately without exposing sensitive information
- Provide graceful fallbacks for all error scenarios

## Security Rules
- Never log or expose API keys (ANTHROPIC_API_KEY, OPENAI_API_KEY)
- Validate all user inputs
- Use proper permission checks for admin commands 